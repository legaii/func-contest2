{-

  TASK 2 - Merge hashmaps (dictionaries)
  Write the method that merges two hashmaps into one. When keys of hashmaps
  interesect - values from first hashmap should be used, while discarded
  key/value pairs should be stored into separate hashmap.
  Method should return two hashmaps (merged_dict, discared_dict). If any
  of resulting hashmaps is empty it should be represented by `null` value.
  Hashmap key length is 256 bit. Each hashmap has at most 256 elements.
-}

() recv_internal() {
}


;; testable
(cell, cell) merge_hashmaps(cell dict1, cell dict2) method_id {
  int key_len = 256;

  {-
    Transform dict1 into merged_dict and dict2 into discarded_dict by
    iterating over the elements of dict2 and moving them to dict1 if
    the keys don't intersect.
  -}

  (int key, slice value, int success) = dict2.udict_get_min?(key_len);

  while (success) {
    if (dict1~udict_add?(key_len, key, value)) {
      dict2~udict_delete?(key_len, key);
    }

    (key, value, success) = dict2.udict_get_next?(key_len, key);
  }

  return (dict1, dict2);
}
